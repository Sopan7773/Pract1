#include <iostream>
#include <omp.h>

using namespace std;

void merge(int A[], int low, int mid, int high){
    int i = low;
    int j = mid + 1;
    int k = low;
    int B[100];
    while(i <= mid && j <= high) {
        if (A[i] < A[j]){
            B[k] = A[i];
            i++;
            k++;
        }else{
            B[k] = A[j];
            k++;
            j++;
        }
    }
    while(i <= mid) {
        B[k] = A[i];
        i++;
        k++;
    }
    while (j <= high)
    {
        B[k] = A[j];
        j++;
        k++;
    }
    for (int i = low; i <= high; i++){
        A[i] = B[i];
    }
}

void mergesort(int A[], int low, int high){
    if (low < high){
        int mid = (low + high) / 2;
        mergesort(A, low, mid);
        mergesort(A, mid+1, high);
        merge(A, low, mid, high);
    }
}

int main(){
    int A[] = {15,11,1,5,2};
    int num = 5;
    mergesort(A, 0, 4);
    cout << "Sorted Array is :" << endl;
    for (int i = 0; i < num; i++){
        cout << A[i] << " ";
    }
    return 0;
}